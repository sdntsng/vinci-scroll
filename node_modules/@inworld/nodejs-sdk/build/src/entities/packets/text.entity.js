"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextEvent = void 0;
const packets_pb_1 = require("../../../../proto/ai/inworld/packets/packets_pb");
const data_structures_1 = require("../../common/data_structures");
class TextEvent {
    constructor({ text, final, type = data_structures_1.InworldTextPacketType.TYPED_IN, }) {
        this.text = text;
        this.final = final;
        this.type = type;
    }
    static fromProto(proto) {
        return new TextEvent({
            text: proto.getText(),
            final: proto.getFinal(),
            type: TextEvent.getType(proto.getSourceType()),
        });
    }
    static getType(protoType) {
        switch (protoType) {
            case packets_pb_1.TextEvent.SourceType.SPEECH_TO_TEXT:
                return data_structures_1.InworldTextPacketType.SPEECH_TO_TEXT;
            case packets_pb_1.TextEvent.SourceType.TYPED_IN:
                return data_structures_1.InworldTextPacketType.TYPED_IN;
            case packets_pb_1.TextEvent.SourceType.GENERATED:
                return data_structures_1.InworldTextPacketType.GENERATED;
            case packets_pb_1.TextEvent.SourceType.FILLER:
                return data_structures_1.InworldTextPacketType.FILLER;
            default:
                return data_structures_1.InworldTextPacketType.UNKNOWN;
        }
    }
}
exports.TextEvent = TextEvent;
