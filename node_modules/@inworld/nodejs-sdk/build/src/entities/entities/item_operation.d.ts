import { ItemsOperationEvent as ProtoItemsOperationEvent } from '../../../../proto/ai/inworld/packets/entities/entities_packets_pb';
import { ItemsInEntitiesOperationType } from '../../common/data_structures';
import { EntityItem } from './entity_item';
export type CreateOrUpdateItemsOperation = {
    items: EntityItem[];
    addToEntities: string[];
};
export type RemoveItemsOperation = {
    itemIds?: string[];
};
export type ItemsInEntitiesOperation = {
    type?: ItemsInEntitiesOperationType;
    itemIds?: string[];
    entityNames?: string[];
};
export declare class ItemOperation {
    createOrUpdateItems: CreateOrUpdateItemsOperation | undefined;
    removeItems: RemoveItemsOperation | undefined;
    itemsInEntities: ItemsInEntitiesOperation | undefined;
    constructor({ createOrUpdateItems, removeItems, itemsInEntities, }: {
        createOrUpdateItems?: CreateOrUpdateItemsOperation;
        removeItems?: RemoveItemsOperation;
        itemsInEntities?: ItemsInEntitiesOperation;
    });
    static fromProto(proto: ProtoItemsOperationEvent): ItemOperation;
    toProto(): ProtoItemsOperationEvent;
    private static convertOperationTypeToProto;
    private static convertOperationTypeFromProto;
}
